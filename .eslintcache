[{"C:\\Dev\\Projects\\Web\\examiner\\src\\index.tsx":"1","C:\\Dev\\Projects\\Web\\examiner\\src\\App.tsx":"2","C:\\Dev\\Projects\\Web\\examiner\\src\\reducers\\index.ts":"3","C:\\Dev\\Projects\\Web\\examiner\\src\\actions\\types.ts":"4","C:\\Dev\\Projects\\Web\\examiner\\src\\styles\\globalStyles.ts":"5","C:\\Dev\\Projects\\Web\\examiner\\src\\components\\Revision\\Revision.tsx":"6","C:\\Dev\\Projects\\Web\\examiner\\src\\components\\Navbar\\Navbar.tsx":"7","C:\\Dev\\Projects\\Web\\examiner\\src\\components\\Questions\\Questions.tsx":"8","C:\\Dev\\Projects\\Web\\examiner\\src\\actions\\index.ts":"9","C:\\Dev\\Projects\\Web\\examiner\\src\\styles\\values.ts":"10","C:\\Dev\\Projects\\Web\\examiner\\src\\styles\\reset.ts":"11","C:\\Dev\\Projects\\Web\\examiner\\src\\styles\\setSizing.ts":"12","C:\\Dev\\Projects\\Web\\examiner\\src\\models\\Question.ts":"13","C:\\Dev\\Projects\\Web\\examiner\\src\\utils\\isArrayOfType.ts":"14","C:\\Dev\\Projects\\Web\\examiner\\src\\components\\Navbar\\NavbarStyle.ts":"15","C:\\Dev\\Projects\\Web\\examiner\\src\\utils\\shuffle.ts":"16","C:\\Dev\\Projects\\Web\\examiner\\src\\components\\Revision\\FinalScoreSubpage.tsx":"17","C:\\Dev\\Projects\\Web\\examiner\\src\\components\\Revision\\AnswerSubpage.tsx":"18","C:\\Dev\\Projects\\Web\\examiner\\src\\components\\Questions\\Editor.tsx":"19","C:\\Dev\\Projects\\Web\\examiner\\src\\components\\Revision\\RevisionTypeSelectionSubpage.tsx":"20","C:\\Dev\\Projects\\Web\\examiner\\src\\components\\Revision\\QuestionSubpage.tsx":"21","C:\\Dev\\Projects\\Web\\examiner\\src\\components\\common\\Button\\Button.tsx":"22","C:\\Dev\\Projects\\Web\\examiner\\src\\components\\Questions\\EditQuestion.tsx":"23","C:\\Dev\\Projects\\Web\\examiner\\src\\components\\common\\Button\\ButtonStyle.ts":"24"},{"size":693,"mtime":1605311735663,"results":"25","hashOfConfig":"26"},{"size":1471,"mtime":1609539702250,"results":"27","hashOfConfig":"26"},{"size":1295,"mtime":1605985412425,"results":"28","hashOfConfig":"26"},{"size":1119,"mtime":1605985318735,"results":"29","hashOfConfig":"26"},{"size":479,"mtime":1609504816532,"results":"30","hashOfConfig":"26"},{"size":6333,"mtime":1609539702253,"results":"31","hashOfConfig":"26"},{"size":472,"mtime":1609504816513,"results":"32","hashOfConfig":"26"},{"size":2214,"mtime":1609539702252,"results":"33","hashOfConfig":"26"},{"size":1568,"mtime":1605985332095,"results":"34","hashOfConfig":"26"},{"size":187,"mtime":1609504816533,"results":"35","hashOfConfig":"26"},{"size":1185,"mtime":1609491557060,"results":"36","hashOfConfig":"26"},{"size":191,"mtime":1609491557061,"results":"37","hashOfConfig":"26"},{"size":614,"mtime":1609491557059,"results":"38","hashOfConfig":"26"},{"size":479,"mtime":1605506144409,"results":"39","hashOfConfig":"26"},{"size":408,"mtime":1609504816513,"results":"40","hashOfConfig":"26"},{"size":501,"mtime":1605819223470,"results":"41","hashOfConfig":"26"},{"size":480,"mtime":1609491557055,"results":"42","hashOfConfig":"26"},{"size":1275,"mtime":1609504816529,"results":"43","hashOfConfig":"26"},{"size":1497,"mtime":1605986623049,"results":"44","hashOfConfig":"26"},{"size":950,"mtime":1609491557057,"results":"45","hashOfConfig":"26"},{"size":1426,"mtime":1609491557056,"results":"46","hashOfConfig":"26"},{"size":337,"mtime":1609539702254,"results":"47","hashOfConfig":"26"},{"size":6111,"mtime":1609539989514,"results":"48","hashOfConfig":"26"},{"size":362,"mtime":1609539702255,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"zmf6ak",{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Dev\\Projects\\Web\\examiner\\src\\index.tsx",[],["101","102"],"C:\\Dev\\Projects\\Web\\examiner\\src\\App.tsx",["103"],"C:\\Dev\\Projects\\Web\\examiner\\src\\reducers\\index.ts",["104"],"import {\r\n  QuestionsState,\r\n  ADD_QUESTION,\r\n  CURRENT_VERSION,\r\n  QuestionActionTypes,\r\n  EDIT_QUESTION,\r\n  SET_QUESTIONS,\r\n  DELETE_QUESTION,\r\n} from \"../actions/types\";\r\nimport { combineReducers, Action } from \"redux\";\r\nimport { TypedUseSelectorHook, useSelector } from \"react-redux\";\r\nimport { ThunkAction } from \"redux-thunk\";\r\n\r\nconst defaultQuestionsState: QuestionsState = [];\r\n\r\nexport const questionsReducer = (\r\n  state = defaultQuestionsState,\r\n  action: QuestionActionTypes\r\n): QuestionsState => {\r\n  switch (action.type) {\r\n    case ADD_QUESTION:\r\n      return [...state, action.payload];\r\n    case DELETE_QUESTION:\r\n      return state.filter((question) => question.id !== action.payload);\r\n    case EDIT_QUESTION:\r\n      return state.map((question) =>\r\n        question.id === action.payload.id ? action.payload : question\r\n      );\r\n    case SET_QUESTIONS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const rootReducer = combineReducers({\r\n  questions: questionsReducer,\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  RootState,\r\n  unknown,\r\n  Action<string>\r\n>;\r\n","C:\\Dev\\Projects\\Web\\examiner\\src\\actions\\types.ts",[],"C:\\Dev\\Projects\\Web\\examiner\\src\\styles\\globalStyles.ts",[],"C:\\Dev\\Projects\\Web\\examiner\\src\\components\\Revision\\Revision.tsx",["105","106"],"C:\\Dev\\Projects\\Web\\examiner\\src\\components\\Navbar\\Navbar.tsx",[],"C:\\Dev\\Projects\\Web\\examiner\\src\\components\\Questions\\Questions.tsx",[],"C:\\Dev\\Projects\\Web\\examiner\\src\\actions\\index.ts",[],"C:\\Dev\\Projects\\Web\\examiner\\src\\styles\\values.ts",[],"C:\\Dev\\Projects\\Web\\examiner\\src\\styles\\reset.ts",[],"C:\\Dev\\Projects\\Web\\examiner\\src\\styles\\setSizing.ts",[],"C:\\Dev\\Projects\\Web\\examiner\\src\\models\\Question.ts",[],"C:\\Dev\\Projects\\Web\\examiner\\src\\utils\\isArrayOfType.ts",[],"C:\\Dev\\Projects\\Web\\examiner\\src\\components\\Navbar\\NavbarStyle.ts",[],"C:\\Dev\\Projects\\Web\\examiner\\src\\utils\\shuffle.ts",[],"C:\\Dev\\Projects\\Web\\examiner\\src\\components\\Revision\\FinalScoreSubpage.tsx",[],"C:\\Dev\\Projects\\Web\\examiner\\src\\components\\Revision\\AnswerSubpage.tsx",[],"C:\\Dev\\Projects\\Web\\examiner\\src\\components\\Questions\\Editor.tsx",["107"],"import React, { useState, useEffect } from \"react\";\r\nimport { useRouteMatch, Switch, Route } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport EditQuestion from \"./EditQuestion\";\r\n\r\nimport { useTypedSelector } from \"../../reducers\";\r\n\r\nconst Editor: React.FC = () => {\r\n  const [search, setSearch] = useState(\"\");\r\n  const match = useRouteMatch();\r\n\r\n  const questions = useTypedSelector(({ questions }) =>\r\n    questions\r\n      .filter(\r\n        ({ question }) =>\r\n          question.toLowerCase().indexOf(search.toLowerCase()) >= 0\r\n      )\r\n      .sort((a, b) => (a.question < b.question ? -1 : 1))\r\n  );\r\n\r\n  const updateSearch = (text: string) => {\r\n    setSearch(() => text);\r\n  };\r\n\r\n  return (\r\n    <Switch>\r\n      <Route path={`${match.path}/addQuestion`}>\r\n        <EditQuestion />\r\n      </Route>\r\n      <Route path={`${match.path}/:questionId`}>\r\n        <EditQuestion />\r\n      </Route>\r\n      <Route path={match.path}>\r\n        <div>\r\n          <input\r\n            placeholder=\"Search\"\r\n            value={search}\r\n            onChange={(e) => updateSearch(e.target.value)}\r\n          />\r\n          <Link to={`${match.url}/addQuestion`}>\r\n            <button>Add New Question</button>\r\n          </Link>\r\n          {questions.map(({ question, id }) => (\r\n            <Link key={id} to={`${match.url}/${id}`}>\r\n              <p>{question}</p>\r\n            </Link>\r\n          ))}\r\n        </div>\r\n      </Route>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default Editor;\r\n","C:\\Dev\\Projects\\Web\\examiner\\src\\components\\Revision\\RevisionTypeSelectionSubpage.tsx",[],"C:\\Dev\\Projects\\Web\\examiner\\src\\components\\Revision\\QuestionSubpage.tsx",[],"C:\\Dev\\Projects\\Web\\examiner\\src\\components\\common\\Button\\Button.tsx",[],"C:\\Dev\\Projects\\Web\\examiner\\src\\components\\Questions\\EditQuestion.tsx",["108"],"C:\\Dev\\Projects\\Web\\examiner\\src\\components\\common\\Button\\ButtonStyle.ts",[],{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":30,"column":6,"nodeType":"115","endLine":30,"endColumn":8,"suggestions":"116"},{"ruleId":"117","severity":1,"message":"118","line":4,"column":3,"nodeType":"119","messageId":"120","endLine":4,"endColumn":18},{"ruleId":"113","severity":1,"message":"121","line":39,"column":5,"nodeType":"115","endLine":39,"endColumn":16,"suggestions":"122"},{"ruleId":"113","severity":1,"message":"123","line":157,"column":6,"nodeType":"115","endLine":157,"endColumn":20,"suggestions":"124"},{"ruleId":"117","severity":1,"message":"125","line":1,"column":27,"nodeType":"119","messageId":"120","endLine":1,"endColumn":36},{"ruleId":"113","severity":1,"message":"126","line":171,"column":6,"nodeType":"115","endLine":171,"endColumn":8,"suggestions":"127"},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setQuestionsFromLocalStorage'. Either include it or remove the dependency array.","ArrayExpression",["130"],"@typescript-eslint/no-unused-vars","'CURRENT_VERSION' is defined but never used.","Identifier","unusedVar","React Hook useMemo has a missing dependency: 'questions'. Either include it or remove the dependency array.",["131"],"React Hook useEffect has missing dependencies: 'dispatch', 'questionIds.length', and 'questions'. Either include them or remove the dependency array.",["132"],"'useEffect' is defined but never used.","React Hook useEffect has missing dependencies: 'questionId' and 'setQuestionData'. Either include them or remove the dependency array.",["133"],"no-global-assign","no-unsafe-negation",{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},"Update the dependencies array to be: [setQuestionsFromLocalStorage]",{"range":"142","text":"143"},"Update the dependencies array to be: [currentId, questions]",{"range":"144","text":"145"},"Update the dependencies array to be: [dispatch, questionIds.length, questions, revisionType]",{"range":"146","text":"147"},"Update the dependencies array to be: [questionId, setQuestionData]",{"range":"148","text":"149"},[1056,1058],"[setQuestionsFromLocalStorage]",[1542,1553],"[currentId, questions]",[5004,5018],"[dispatch, questionIds.length, questions, revisionType]",[4960,4962],"[questionId, setQuestionData]"]